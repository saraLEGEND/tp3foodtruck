name: "tag-release"

on:
  push:
    tags: 
      - "TP3-V*"
    branches: 
     - main
  pull_request:
    branches: 
      - main
  
  workflow_dispatch:

env:
  PROJECT_PATH: TP214E/TP214E.csproj
  TEST_PROJECT_PATH: TP214EPTests/TP214ETests.csproj

jobs:
  tagged-release:
    name: "Taggued release"
    runs-on: windows-latest
    steps:
    
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    
    # Install the .NET Core workload
    - name: Install .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x

    - name: Dependances
      run: dotnet restore ${{ env.PROJECT_PATH }}
      
    - name: Build      
      run: dotnet build ${{ env.PROJECT_PATH }} -c Release --no-restore

    # Add  MSBuild to the PATH: https://github.com/microsoft/setup-msbuild
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v1.0.2
    
    #crée une 'release' sur votre repo github 
    - uses: actions/create-release@v1
      id: create_release
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          
    #pousse l'exécutable dans la 'release' github créée précédament
    - uses: csexton/release-asset-action@v2
      with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          pattern: TP214E/bin/Release/netcoreapp3.1/win-x64/publish/*.exe
          release-url: ${{ steps.create_release.outputs.upload_url }}
          
    - name: Publish
      run: dotnet publish ${{ env.PROJECT_PATH }} -c Release --self-contained -r win-x64 -p:PublishSingleFile=true --no-build
